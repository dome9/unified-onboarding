AWSTemplateFormatVersion: 2010-09-09
Description: Check Point CloudGuard Dome9 unified onboarding
Metadata:
  Version: 4.9.1
Parameters:
  OnboardingId:
    Description: The id of the onboarding process
    Type: String
  ApiBaseUrl:
    Description: The base url of the CloudGuard web API
    Type: String
  CloudGuardApiKeyId:
    Description: The CloudGuard service account API Key Id
    Type: String
  CloudGuardApiKeySecret:
    Description: The CloudGuard service account API Key secret
    Type: String
  Version:
    Description: The CloudGuard onboarding version
    Type: String
  EnableRemoteStackModify:
    Description: Whether CloudGuard have permissions to update or delete the stack
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  UniqueSuffix:
    Description: An optional suffix for all resources
    Type: String
    Default: ''
    MaxLength: 19
  DeleteInnerResources:
    Description: Whether to delete Lambda inner resources
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
  RemoteStackModifyRoleExternalTrustSecret:
    Description: CloudGuard generated unique id for assuming external trust
    Type: String
  CloudGuardAwsAccountNumber:
    Description: The CloudGuard AWS account number
    Type: String
  ServerlessStage:
    Description: The Serverless stage name
    Type: String
Conditions:
  RemoteStackModifyEnabled: !Equals 
    - !Ref EnableRemoteStackModify
    - true
  DeleteEvent: !Equals 
    - !Ref DeleteInnerResources
    - true
Resources:
  CloudGuardOnboardingStackModifyPermissions:
    Type: AWS::IAM::Role
    Condition: RemoteStackModifyEnabled
    Properties:
      RoleName: !Sub CloudGuard-Onboarding-StackModify-role${UniqueSuffix}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${CloudGuardAwsAccountNumber}:root
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Ref RemoteStackModifyRoleExternalTrustSecret
      Policies:
        - PolicyName: !Sub CloudGuard-Lambda-StackModify-policy${UniqueSuffix}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: DeleteRolePolicy
                Effect: Allow
                Action:
                  - iam:GetRole
                  - iam:DeleteRolePolicy
                  - iam:DeleteRole
                  - iam:DetachRolePolicy
                  - iam:PutRolePolicy
                Resource: !Sub >-
                  arn:${AWS::Partition}:iam::${AWS::AccountId}:role/CloudGuard-Onboarding-StackModify-role${UniqueSuffix}
              - Sid: ModifyStack
                Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:DeleteStack
                Resource: !Ref AWS::StackId
              - Sid: ModifyFunction
                Effect: Allow
                Action:
                  - lambda:UpdateFunctionCode
                  - lambda:InvokeFunction
                  - lambda:DeleteFunction
                  - lambda:RemovePermission
                  - lambda:GetFunction
                  - lambda:CreateFunction
                  - lambda:RemovePermission
                  - lambda:AddPermission
                Resource:
                  - !Sub >-
                    arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:CloudGuardOnboardingOrchestrator*
              - Sid: ModifyRole
                Effect: Allow
                Action:
                  - iam:GetRole
                  - iam:DeleteRole
                  - iam:DetachRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:PutRolePolicy
                  - iam:PassRole
                Resource:
                  - !Sub >-
                    arn:${AWS::Partition}:iam::${AWS::AccountId}:role/CloudGuard-Onboarding-Orchestrator-role${UniqueSuffix}
                  - !Sub >-
                    arn:${AWS::Partition}:iam::${AWS::AccountId}:role/CloudGuard-Onboarding-Orchestrator-helper-role${UniqueSuffix}
              - Sid: GetLambdaCode
                Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub arn:${AWS::Partition}:s3:::cloudguard-unified-onboarding*
              - Sid: ModifySns
                Effect: Allow
                Action:
                  - SNS:DeleteTopic
                  - SNS:Unsubscribe
                  - SNS:SetTopicAttributes
                  - SNS:GetTopicAttributes
                  - SNS:Subscribe
                  - SNS:Publish
                Resource: !Sub >-
                  arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:CloudGuardOnboardingOrchestrator${UniqueSuffix}
  CloudGuardOnboardingSns:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub CloudGuardOnboardingOrchestrator${UniqueSuffix}
      TopicName: !Sub CloudGuardOnboardingOrchestrator${UniqueSuffix}
      Tags:
        - Key: ConditionalDependsOn
          Value: !If 
            - RemoteStackModifyEnabled
            - !Ref CloudGuardOnboardingStackModifyPermissions
            - Ignored
  CloudGuardOnboardingSnsPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: !Sub CloudGuardOnboardingOrchestratorSnsPolicy
        Version: 2012-10-17
        Statement:
          - Sid: AllowCFTInvokeSNS
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sns:Publish
            Resource: !Ref CloudGuardOnboardingSns
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref AWS::StackId
      Topics:
        - !Ref CloudGuardOnboardingSns
  CloudGuardOrchestratorRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub CloudGuard-Onboarding-Orchestrator-role${UniqueSuffix}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub CloudGuard-Onboarding-Orchestrator-policy${UniqueSuffix}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudGuardOnboardingOrchestratorCloudformation
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DeleteStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                Effect: Allow
                Resource:
                  - !Sub >-
                    arn:${AWS::Partition}:cloudformation:*:${AWS::AccountId}:stack/CloudGuard-Onboarding*
              - Sid: CloudGuardOnboardingOrchestratorCloudformationList
                Action:
                  - cloudformation:ListStacks
                Effect: Allow
                Resource: !Sub >-
                  arn:${AWS::Partition}:cloudformation:*:${AWS::AccountId}:stack/*/*
              - Sid: CloudGuardOnboardingOrchestratorIamListAccount
                Action:
                  - iam:ListAccountAliases
                Effect: Allow
                Resource: '*'
              - Sid: CloudGuardOnboardingOrchestratorSelfDistruction
                Action:
                  - lambda:DeleteFunction
                Effect: Allow
                Resource: !Join 
                  - '-'
                  - - !Sub >-
                      arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:CloudGuardOnboardingOrchestrator
                    - !If 
                      - DeleteEvent
                      - Delete
                      - ''
                    - !Select 
                      - 3
                      - !Split 
                        - '-'
                        - !Ref CloudGuardApiKeyId
              - Sid: >-
                  CloudGuardOnboardingOrchestratorSelfDistructionDeleteSubscription
                Action:
                  - SNS:Unsubscribe
                Effect: Allow
                Resource: !Ref CloudGuardOnboardingSns
              - Sid: GetTemplate
                Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub >-
                  arn:${AWS::Partition}:s3:::cloudguard-unified-onboarding-${AWS::Region}/*
              - Sid: CloudGuardOnboardingOrchestratorIamPolicy
                Action:
                  - iam:GetPolicy
                  - iam:CreatePolicy
                  - iam:DeletePolicy
                  - iam:ListPolicyVersions
                  - iam:CreatePolicyVersion
                  - iam:DeletePolicyVersion
                Effect: Allow
                Resource:
                  - !Sub >-
                    arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/CloudGuard-Connect-RO-policy${UniqueSuffix}
                  - !Sub >-
                    arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/CloudGuard-Connect-RW-policy${UniqueSuffix}
              - Sid: CloudGuardOnboardingOrchestratorIam
                Action:
                  - iam:GetRole
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:PutRolePolicy
                  - iam:DetachRolePolicy
                  - iam:AttachRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:getRolePolicy
                  - iam:UpdateRole
                  - iam:TagRole
                  - iam:UntagRole
                  - iam:DeleteRolePolicy
                  - iam:PassRole
                Effect: Allow
                Resource:
                  - !Sub >-
                    arn:${AWS::Partition}:iam::${AWS::AccountId}:role/CloudGuard-Connect-RO-role${UniqueSuffix}
                  - !Sub >-
                    arn:${AWS::Partition}:iam::${AWS::AccountId}:role/CloudGuard-Connect-RW-role${UniqueSuffix}
                  - !Sub >-
                    arn:${AWS::Partition}:iam::${AWS::AccountId}:role/CloudGuardFSPLogsSenderRole
                  - !Sub >-
                    arn:${AWS::Partition}:iam::${AWS::AccountId}:role/CloudGuardServerlessCrossAccountRole
                  - !Sub >-
                    arn:${AWS::Partition}:iam::${AWS::AccountId}:role/CloudGuardServerlessCodeAnalysisPython3LambdaExecutionRole
                  - !Sub >-
                    arn:${AWS::Partition}:iam::${AWS::AccountId}:role/CloudGuardServerlessCodeAnalysisJavaLambdaExecutionRole
                  - !Sub >-
                    arn:${AWS::Partition}:iam::${AWS::AccountId}:role/CloudGuardServerlessCodeAnalysisNode14LambdaExecutionRole
                  - !Sub >-
                    arn:${AWS::Partition}:iam::${AWS::AccountId}:role/CloudGuardServerlessCodeAnalysisCSharpLambdaExecutionRole
                  - !Sub >-
                    arn:${AWS::Partition}:iam::${AWS::AccountId}:role/CloudGuardServerlessFSPInjectorLambdaExecutionRole
              - Sid: CloudGuardOnboardingOrchestratorIntelligenceCloudtrail
                Action:
                  - cloudtrail:DescribeTrails
                Effect: Allow
                Resource: '*'
              - Sid: CloudGuardOnboardingOrchestratorIntelligenceS3
                Action:
                  - s3:GetBucketLocation
                  - s3:GetBucketNotification
                  - s3:PutBucketNotification
                Effect: Allow
                Resource: '*'
              - Sid: CloudGuardOnboardingOrchestratorServelessLambda
                Action:
                  - lambda:GetFunction
                  - lambda:GetFunctionConfiguration
                  - lambda:TagResource
                  - lambda:UntagResource
                  - lambda:CreateFunction
                  - lambda:DeleteFunction
                  - lambda:UpdateFunctionCode
                  - lambda:UpdateFunctionConfiguration
                  - lambda:GetFunctionConfiguration
                Effect: Allow
                Resource:
                  - !Sub >-
                    arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CloudGuardNode14CodeAnalysis
                  - !Sub >-
                    arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CloudGuardJavaCodeAnalysis
                  - !Sub >-
                    arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CloudGuardPy3CodeAnalysis
                  - !Sub >-
                    arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CloudGuardCsCodeAnalysis
                  - !Sub >-
                    arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CloudGuardFSPInjector
              - Sid: CloudGuardOnboardingOrchestratorServelessLambdaTp
                Action:
                  - lambda:GetLayerVersion
                Effect: Allow
                Resource:
                  - !Sub arn:aws:lambda:${AWS::Region}:553035198032:layer:nodejs12:21
                  - !Sub >-
                    arn:aws:lambda:${AWS::Region}:985618988812:layer:aws-lambda-layer-csharp:*
                  - !Sub >-
                    arn:aws:lambda:${AWS::Region}:985618988812:layer:aws-lambda-layer-java:*
              - Sid: CloudGuardOnboardingOrchestratorServelessLogs
                Action:
                  - logs:DescribeLogGroups
                  - logs:CreateLogGroup
                  - logs:DeleteLogGroup
                  - logs:CreateLogStream
                  - logs:PutRetentionPolicy
                Effect: Allow
                Resource:
                  - !Sub >-
                    arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/CloudGuardNode14CodeAnalysis:log-stream:*
                  - !Sub >-
                    arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/CloudGuardJavaCodeAnalysis:log-stream:*
                  - !Sub >-
                    arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/CloudGuardPy3CodeAnalysis:log-stream:*
                  - !Sub >-
                    arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/CloudGuardCsCodeAnalysis:log-stream:*
                  - !Sub >-
                    arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/CloudGuardFSPInjector:log-stream:*
              - Sid: CloudGuardOnboardingOrchestratorLogsDescribe
                Action:
                  - logs:DescribeLogGroups
                Effect: Allow
                Resource: !Sub 'arn:aws:logs:*:${AWS::AccountId}:log-group:*:'
              - Sid: CloudGuardOnboardingOrchestratorServelessProtegoS3
                Action:
                  - s3:GetObject
                Effect: Allow
                Resource:
                  - !Sub >-
                    arn:aws:s3:::${ServerlessStage}-protego/code_analysis_functions/*
              - Sid: CloudGuardOnboardingOrchestratorServelessS3
                Action:
                  - s3:GetBucketPolicy
                  - s3:CreateBucket
                  - s3:PutObject
                  - s3:PutBucketPolicy
                  - s3:DeleteObject
                  - s3:DeleteBucketPolicy
                  - s3:DeleteBucket
                  - s3:PutEncryptionConfiguration
                  - s3:PutBucketPublicAccessBlock
                Effect: Allow
                Resource:
                  - !Sub arn:aws:s3:::protego-fsp-${AWS::AccountId}
                  - !Sub arn:aws:s3:::protego-fsp-${AWS::AccountId}/*
              - Sid: CloudGuardOnboardingOrchestratorServelessKms
                Action:
                  - kms:CreateKey
                  - kms:CreateAlias
                  - kms:DeleteAlias
                  - kms:PutKeyPolicy
                Effect: Allow
                Resource: '*'
              - Sid: CloudGuardOnboardingOrchestratorServelessSns
                Action:
                  - sns:Publish
                Effect: Allow
                Resource:
                  - !Sub >-
                    arn:aws:sns:${AWS::Region}:${CloudGuardAwsAccountNumber}:${ServerlessStage}-${AWS::AccountId}-notifications
              - Sid: CloudGuardOnboardingOrchestratorIntelligenceSns
                Action:
                  - sns:GetTopicAttributes
                  - sns:CreateTopic
                  - sns:Publish
                  - sns:Subscribe
                  - sns:Unsubscribe
                  - sns:SetTopicAttributes
                  - sns:DeleteTopic
                Effect: Allow
                Resource:
                  - !Sub >-
                    arn:aws:sns:*:${AWS::AccountId}:Intelligence-Log-Delivery${UniqueSuffix}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Tags:
        - Key: ConditionalDependsOn
          Value: !If 
            - RemoteStackModifyEnabled
            - !Ref CloudGuardOnboardingStackModifyPermissions
            - Ignored
  CloudGuardOnboardingOrchestrator:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Join 
        - '-'
        - - CloudGuardOnboardingOrchestrator
          - !If 
            - DeleteEvent
            - Delete
            - ''
          - !Select 
            - 3
            - !Split 
              - '-'
              - !Ref CloudGuardApiKeyId
      Runtime: dotnet6
      Role: !GetAtt CloudGuardOrchestratorRole.Arn
      Handler: >-
        Dome9.CloudGuardOnboarding.Orchestrator::Dome9.CloudGuardOnboarding.Orchestrator.Function::FunctionHandler
      Timeout: 900
      Code:
        S3Bucket: !Sub cloudguard-unified-onboarding-${AWS::Region}
        S3Key: !Sub ${Version}/lambda/orchestrator/publish.zip
      Description: Invoke a function during stack creation
  OrchestratorInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref CloudGuardOnboardingSns
      FunctionName: !Ref CloudGuardOnboardingOrchestrator
  OrchestratorSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt CloudGuardOnboardingOrchestrator.Arn
      Protocol: lambda
      TopicArn: !Ref CloudGuardOnboardingSns
  CloudGuardOrchestratorHelperRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub CloudGuard-Onboarding-Orchestrator-helper-role${UniqueSuffix}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub CloudGuard-Onboarding-Orchestrator-helper-policy${UniqueSuffix}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CreateLogGroup
                Effect: Allow
                Resource:
                  - '*'
                Action:
                  - logs:CreateLogGroup
              - Sid: LoggingLogs
                Effect: Allow
                Resource:
                  - !Sub >-
                    arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/CloudGuardOnboardingOrchestrator-Helper${UniqueSuffix}:*
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
      Tags:
        - Key: ConditionalDependsOn
          Value: !If 
            - RemoteStackModifyEnabled
            - !Ref CloudGuardOnboardingStackModifyPermissions
            - Ignored
  CloudGuardOrchestratorHelper:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub CloudGuardOnboardingOrchestrator-Helper${UniqueSuffix}
      Runtime: nodejs14.x
      Role: !GetAtt CloudGuardOrchestratorHelperRole.Arn
      Handler: index.handler
      Timeout: 300
      Code:
        S3Bucket: !Sub cloudguard-unified-onboarding-${AWS::Region}
        S3Key: !Sub ${Version}/lambda/orchestrator/helper/publish.zip
  OrchestratorHelperInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref CloudGuardOnboardingSns
      FunctionName: !Ref CloudGuardOrchestratorHelper
  OrchestratorHelperSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt CloudGuardOrchestratorHelper.Arn
      Protocol: lambda
      TopicArn: !Ref CloudGuardOnboardingSns
  CloudGuardOnboardingOrchestratorInvoke:
    Type: AWS::CloudFormation::CustomResource
    DependsOn:
      - CloudGuardOnboardingSnsPolicy
      - OrchestratorInvokePermission
      - OrchestratorSubscription
      - OrchestratorHelperInvokePermission
      - OrchestratorHelperSubscription
    Properties:
      ServiceToken: !Ref CloudGuardOnboardingSns
      OnboardingId: !Ref OnboardingId
      ApiBaseUrl: !Ref ApiBaseUrl
      CloudGuardApiKeyId: !Ref CloudGuardApiKeyId
      CloudGuardApiKeySecret: !Ref CloudGuardApiKeySecret
      AwsAccountId: !Ref AWS::AccountId
      AwsPartition: !Ref AWS::Partition
      S3BucketName: !Sub cloudguard-unified-onboarding-${AWS::Region}
      AwsAccountRegion: !Ref AWS::Region
      EnableRemoteStackModify: !Ref EnableRemoteStackModify
      RootStackId: !Ref AWS::StackId
      Version: !Ref Version
      UniqueSuffix: !Ref UniqueSuffix
      Self: !GetAtt CloudGuardOnboardingOrchestrator.Arn
      Subscription: !Ref OrchestratorSubscription
      DeleteInnerResources: !Ref DeleteInnerResources
      OnboardingStackModifyRoleArn: !If 
        - RemoteStackModifyEnabled
        - !GetAtt CloudGuardOnboardingStackModifyPermissions.Arn
        - ''
