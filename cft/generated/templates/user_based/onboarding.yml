AWSTemplateFormatVersion: 2010-09-09
Description: Check Point CloudGuard Dome9 unified onboarding
Metadata:
  Version: 2.6.0
Parameters:
  S3BucketName:
    Description: The S3 Bucket
    Type: String
  OnboardingId:
    Description: The id of the onboarding process
    Type: String
  ApiBaseUrl:
    Description: The base url of the CloudGuard web API
    Type: String
  CloudGuardApiKeyId:
    Description: The CloudGuard service account API Key Id
    Type: String
  CloudGuardApiKeySecret:
    Description: The CloudGuard service account API Key secret
    Type: String
  LambdaPkgPath:
    Description: The CloudGuard onboarding Lambda package path
    Type: String
  Version:
    Description: The CloudGuard onboarding version
    Type: String
  EnableRemoteStackModify:
    Description: Whether CloudGuard have permissions to update or delete the stack
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  UniqueSuffix:
    Description: An optional suffix for all resources
    Type: String
    Default: ''
    MaxLength: 19
Conditions:
  RemoteStackModifyEnabled: !Equals 
    - !Ref EnableRemoteStackModify
    - true
Resources:
  CloudGuardOnboardingStackModifyCrossAccountUser:
    Type: AWS::IAM::User
    Condition: RemoteStackModifyEnabled
    Properties:
      UserName: !Sub CloudGuard-Onboarding-StackModify-user${UniqueSuffix}
      Policies:
        - PolicyName: !Sub CloudGuard-Lambda-StackModify-policy${UniqueSuffix}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: DeleteUserPolicy
                Effect: Allow
                Action:
                  - iam:GetUser
                  - iam:DeleteUserPolicy
                  - iam:DeleteUser
                  - iam:DeleteAccessKey
                  - iam:ListAccessKeys
                Resource: !Sub >-
                  arn:${AWS::Partition}:iam::${AWS::AccountId}:user/CloudGuard-Onboarding-StackModify-user${UniqueSuffix}
              - Sid: DeleteSecret
                Effect: Allow
                Action:
                  - secretsmanager:DeleteSecret
                Resource: !Sub >-
                  arn:${AWS::Partition}:secretsmanager:*:*:secret:CloudGuardStackModifyCrossAccountUserCredentials-*
              - Sid: ModifyStack
                Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:DeleteStack
                Resource: !Ref AWS::StackId
              - Sid: ModifyFunction
                Effect: Allow
                Action:
                  - lambda:UpdateFunctionCode
                  - lambda:InvokeFunction
                  - lambda:DeleteFunction
                Resource: !Sub >-
                  arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:CloudGuardOnboardingOrchestrator${UniqueSuffix}
              - Sid: ModifyRole
                Effect: Allow
                Action:
                  - iam:GetRole
                  - iam:DeleteRole
                  - iam:DetachRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:PutRolePolicy
                Resource: !Sub >-
                  arn:${AWS::Partition}:iam::${AWS::AccountId}:role/CloudGuard-Onboarding-Orchestrator-role${UniqueSuffix}
              - Sid: LambdaRemovePermission
                Effect: Allow
                Action: lambda:RemovePermission
                Resource: !Sub >-
                  arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:CloudGuardOnboardingOrchestrator${UniqueSuffix}
              - Sid: GetLmabdaCode
                Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub arn:${AWS::Partition}:s3:::${S3BucketName}-${AWS::Region}/*
  StackModifyCrossAccountUserCredentials:
    Type: AWS::IAM::AccessKey
    Condition: RemoteStackModifyEnabled
    Properties:
      Status: Active
      UserName: !Ref CloudGuardOnboardingStackModifyCrossAccountUser
  StackModifyCrossAccountUserCredentialsStored:
    Type: AWS::SecretsManager::Secret
    Condition: RemoteStackModifyEnabled
    Properties:
      Name: CloudGuardStackModifyCrossAccountUserCredentials
      SecretString: !Sub >-
        {"ACCESS_KEY":"${StackModifyCrossAccountUserCredentials}","SECRET_KEY":"${StackModifyCrossAccountUserCredentials.SecretAccessKey}"}
  StackModifyCrossAccountUserWaiter:
    Condition: RemoteStackModifyEnabled
    DependsOn: StackModifyCrossAccountUserCredentialsStored
    Type: AWS::CloudFormation::WaitConditionHandle
  Waiter:
    Type: AWS::CloudFormation::WaitConditionHandle
  StackModifyIfEnabledWaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    Properties:
      Handle: !If 
        - RemoteStackModifyEnabled
        - !Ref StackModifyCrossAccountUserWaiter
        - !Ref Waiter
      Timeout: '1'
      Count: 0
  CloudGuardOrchestratorRole:
    Type: AWS::IAM::Role
    DependsOn: StackModifyIfEnabledWaitCondition
    Properties:
      RoleName: !Sub CloudGuard-Onboarding-Orchestrator-role${UniqueSuffix}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub CloudGuard-Onboarding-Orchestrator-policy${UniqueSuffix}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudGuardOnboardingOrchestratorCloudformation
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DeleteStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                Effect: Allow
                Resource:
                  - !Sub >-
                    arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/CloudGuard-Onboarding*
              - Sid: CloudGuardOnboardingOrchestratorCloudformationList
                Action:
                  - cloudformation:ListStacks
                Effect: Allow
                Resource: !Sub >-
                  arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/*/*
              - Sid: CloudGuardOnboardingOrchestratorIamListAccount
                Action:
                  - iam:ListAccountAliases
                Effect: Allow
                Resource: '*'
              - Sid: CloudGuardOnboardingOrchestratorIam
                Action:
                  - iam:GetUser
                  - iam:CreateUser
                  - iam:DeleteUser
                  - iam:PutUserPolicy
                  - iam:DetachUserPolicy
                  - iam:AttachUserPolicy
                  - iam:DeleteUserPolicy
                  - iam:getUserPolicy
                  - iam:CreateAccessKey
                  - iam:DeleteAccessKey
                  - iam:ListAccessKeys
                Effect: Allow
                Resource:
                  - !Sub >-
                    arn:${AWS::Partition}:iam::${AWS::AccountId}:user/CloudGuard-Connect-RO-user${UniqueSuffix}
                  - !Sub >-
                    arn:${AWS::Partition}:iam::${AWS::AccountId}:user/CloudGuard-Connect-RW-user${UniqueSuffix}
              - Sid: CloudGuardOnboardingOrchestratorSecretsmanagerList
                Action:
                  - secretsmanager:ListSecrets
                Effect: Allow
                Resource: '*'
              - Sid: CloudGuardOnboardingOrchestratorSecretsmanager
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:CreateSecret
                  - secretsmanager:DeleteSecret
                Effect: Allow
                Resource:
                  - !Sub >-
                    arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:CloudGuardCrossAccountUserCredentials-*
                  - !Sub >-
                    arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:CloudGuardStackModifyCrossAccountUserCredentials-*
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  CloudGuardOnboardingOrchestrator:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub CloudGuardOnboardingOrchestrator${UniqueSuffix}
      Runtime: dotnetcore3.1
      Role: !GetAtt CloudGuardOrchestratorRole.Arn
      Handler: >-
        Dome9.CloudGuardOnboarding.Orchestrator::Dome9.CloudGuardOnboarding.Orchestrator.Function::FunctionHandler
      Timeout: 900
      Code:
        S3Bucket: !Sub ${S3BucketName}-${AWS::Region}
        S3Key: !Ref LambdaPkgPath
      Description: Invoke a function during stack creation.
  CloudGuardOnboardingOrchestratorInvoke:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt CloudGuardOnboardingOrchestrator.Arn
      OnboardingId: !Ref OnboardingId
      ApiBaseUrl: !Ref ApiBaseUrl
      CloudGuardApiKeyId: !Ref CloudGuardApiKeyId
      CloudGuardApiKeySecret: !Ref CloudGuardApiKeySecret
      AwsAccountId: !Ref AWS::AccountId
      AwsPartition: !Ref AWS::Partition
      S3BucketName: !Sub ${S3BucketName}-${AWS::Region}
      AwsAccountRegion: !Ref AWS::Region
      EnableRemoteStackModify: !Ref EnableRemoteStackModify
      RootStackId: !Ref AWS::StackId
      Version: !Ref Version
      UniqueSuffix: !Ref UniqueSuffix
