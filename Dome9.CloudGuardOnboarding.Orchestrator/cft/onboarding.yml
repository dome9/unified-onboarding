AWSTemplateFormatVersion: '2010-09-09'
Description: 'Check Point CloudGuard Dome9 unified onboarding'
Metadata:
  Version: 2.0.0

Parameters:
  S3BucketName:
    Description: The S3 Bucket
    Type: String
  OnboardingId:
    Description: The id of the onboarding process
    Type: String
  ApiBaseUrl:
    Description: The base url of the CloudGuard web API
    Type: String
  CloudGuardApiKeyId:
    Description: The CloudGuard service account API Key Id
    Type: String
  CloudGuardApiKeySecret:
    Description: The CloudGuard service account API Key secret
    Type: String
  LambdaPkgPath:
    Description: The CloudGuard onboarding Lambda package path
    Type: String
  CloudGuardAwsAccountNumber:
    Description: The CloudGuard AWS account number
    Type: String
  Version:
    Description: The CloudGuard onboarding version
    Type: String
  EnableRemoteStackModify:
    Description: Whether CloudGuard have permissions to update or delete the stack
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  RemoteStackModifyRoleExternalTrustSecret:
    Description: CloudGuard generated unique id for assuming external trust
    Type: String

Conditions:
  RemoteStackModifyEnabled: !Equals
    - !Ref EnableRemoteStackModify
    - true

Resources:

  CloudGuardOnboardingStackModifyRole:
    Type: AWS::IAM::Role
    Condition: RemoteStackModifyEnabled
    Properties:
      RoleName: 'CloudGuard-Onboarding-StackModify-role'      
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
                AWS: !Sub 'arn:aws:iam::${CloudGuardAwsAccountNumber}:root'
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Ref RemoteStackModifyRoleExternalTrustSecret
  
      Policies:
        - PolicyName: CloudGuard-Lambda-StackModify-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: ModifyStack
                Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:DeleteStack                  
                Resource: !Ref AWS::StackId
          
              - Sid: ModifyFunction
                Effect: Allow
                Action:
                  - lambda:UpdateFunctionCode
                  - lambda:InvokeFunction
                  - lambda:DeleteFunction
                Resource: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CloudGuardOnboardingOrchestrator'
          
              - Sid: ModifyRole
                Effect: Allow
                Action:
                  - iam:GetRole
                  - iam:DeleteRole
                  - iam:DetachRolePolicy
                  - iam:DeleteRolePolicy
                Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudGuard-Lambda-CloudFormation-role'
                  
              - Sid: LambdaRemovePermission
                Effect: Allow
                Action: lambda:RemovePermission
                Resource: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CloudGuardOnboardingOrchestrator'
                          
              - Sid: DeleteRolePolicy
                Effect: Allow
                Action:
                  - iam:GetRole
                  - iam:DeleteRolePolicy
                  - iam:DeleteRole
                Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudGuard-Onboarding-StackModify-role'

              - Sid: GetLmabdaCode
                Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub 'arn:aws:s3:::${S3BucketName}-${AWS::Region}/*'

  StackModifyRoleWaiter: 
    Condition: RemoteStackModifyEnabled
    DependsOn: CloudGuardOnboardingStackModifyRole
    Type: "AWS::CloudFormation::WaitConditionHandle"

  Waiter: 
    Type: "AWS::CloudFormation::WaitConditionHandle"

  StackModifyRoleIfEnabledWaitCondition: 
    Type: "AWS::CloudFormation::WaitCondition"
    Properties: 
      Handle: !If [RemoteStackModifyEnabled, !Ref StackModifyRoleWaiter, !Ref Waiter]
      Timeout: '1'
      Count: 0
               
  CloudGuardLambdaStackCreationRole:  
    Type: AWS::IAM::Role
    DependsOn: StackModifyRoleIfEnabledWaitCondition
    Properties:  
      RoleName: 'CloudGuard-Lambda-CloudFormation-role'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: CloudGuard-Lambda-CloudFormation-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudGuardLambdaCloudFormation
                Action:                 
                  - '*'
                Effect: Allow
                Resource: '*'      

      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  CloudGuardOnboardingOrchestrator:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: 'CloudGuardOnboardingOrchestrator'
      Runtime: dotnetcore3.1
      Role: !GetAtt CloudGuardLambdaStackCreationRole.Arn
      Handler: Dome9.CloudGuardOnboarding.Orchestrator::Dome9.CloudGuardOnboarding.Orchestrator.Function::FunctionHandler
      Timeout: 900
      Code:
        S3Bucket: !Sub '${S3BucketName}-${AWS::Region}'
        S3Key: !Sub '${LambdaPkgPath}'     
      Description: Invoke a function during stack creation.

  CloudGuardOnboardingOrchestratorLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
        FunctionName: !GetAtt CloudGuardOnboardingOrchestrator.Arn
        Action: lambda:InvokeFunction
        Principal: !Ref CloudGuardAwsAccountNumber

  CloudGuardOnboardingOrchestratorInvoke:
    Type: AWS::CloudFormation::CustomResource
    DependsOn: CloudGuardOnboardingOrchestratorLambdaPermission
    Properties:
      ServiceToken: !GetAtt CloudGuardOnboardingOrchestrator.Arn
      OnboardingId: !Ref OnboardingId
      ApiBaseUrl: !Ref ApiBaseUrl
      CloudGuardApiKeyId: !Ref CloudGuardApiKeyId
      CloudGuardApiKeySecret: !Ref CloudGuardApiKeySecret
      AwsAccountId: !Ref AWS::AccountId
      S3BucketName: !Sub '${S3BucketName}-${AWS::Region}'
      AwsAccountRegion: !Ref AWS::Region
      OnboardingStackModifyRoleArn: !If [RemoteStackModifyEnabled, !GetAtt CloudGuardOnboardingStackModifyRole.Arn, '']
      EnableRemoteStackModify: !Ref EnableRemoteStackModify 
      RootStackId: !Ref AWS::StackId
      Version: !Ref Version
  