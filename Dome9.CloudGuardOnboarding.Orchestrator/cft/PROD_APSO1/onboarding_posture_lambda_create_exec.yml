AWSTemplateFormatVersion: '2010-09-09'
Description: 'Check Point CloudGuard Dome9 unified onboarding'
Metadata:
  Version: 0.0.1

Parameters:
  PostureTemplateS3Url:
    Description: The S3 url of CloudFormation Posture template that will be executed by the Lambda
    Type: String
  PostureStackName:
    AllowedPattern: '^[a-zA-Z]+[a-zA-Z0-9-]*$'
    ConstraintDescription: Can contain only up to 128 alphanumeric characters (case sensitive) and hyphens and must start with an alphabetic character
    Description: The CloudGuard Posture stack name that will be executed and saved on the customer AWS account
    MaxLength: '128'
    MinLength: '1'
    Type: String
  CloudGuardAwsAccountId:
    Description: CloudGuard instance AWS AccountId that is requiring external trust
    Type: String
  RoleExternalTrustSecret:
    Description: CloudGuard generated unique id for assuming external trust
    Type: String
  OnboardingId:
    Description: The id of the onboarding process
    Type: String
  ApiBaseUrl:
    Description: The base url of the CloudGuard web API
    Type: String
  CloudGuardApiKeyId:
    Description: The CloudGuard service account API Key Id
    Type: String
  CloudGuardApiKeySecret:
    Description: The CloudGuard service account API Key secret
    Type: String
  ServerlessProtectionEnabled:
    AllowedValues:
      - true
      - false
    ConstraintDescription:  True or False TODO make this a boolean
    Default: false
    Description: CloudGuard Serverles protection enabled if True
    MaxLength: '5'
    MinLength: '4'
    Type: String
  ServerlessTemplateS3Url:
    Description: The S3 url of CloudFormation Serverless template that will be executed by the Lambda
    Type: String
  ServerlessStackName:
    AllowedPattern: '^[a-zA-Z]+[a-zA-Z0-9-]*$'
    ConstraintDescription: Can contain only up to 128 alphanumeric characters (case sensitive) and hyphens and must start with an alphabetic character
    Description: The CloudGuard Serverless stack name that will be executed and saved on the customer AWS account
    MaxLength: '128'
    MinLength: '1'
    Type: String

Resources:
  CloudGuardLambdaStackCreationRole:  
    Type: AWS::IAM::Role
    Properties:  
      RoleName: 'CloudGuard-Lambda-CloudFormation-role'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: CloudGuard-Lambda-CloudFormation-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudGuardLambdaCloudFormation
                Action:                   
                  #- 'cloudformation:*'
                  #- 'iam:*'
                  #- 'sns:*'
                  - '*'
                Effect: Allow
                Resource: '*'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        # or just add administrator on everything to make sure that the perms 
  CloudGuardOnboardingOrchestrator:
    Type: AWS::Lambda::Function
    DependsOn:
      - CloudGuardLambdaStackCreationRole
    Properties:
      Runtime: dotnetcore3.1
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CloudGuard-Lambda-CloudFormation-role'
      Handler: Dome9.CloudGuardOnboarding.Orchestrator::Dome9.CloudGuardOnboarding.Orchestrator.Function::FunctionHandler
      Timeout: 900
      Code:
        S3Bucket: 'cloudbuard-unified-onboarding-578204784313'
        S3Key: 'lambda/orchestrator/publish.zip'     
      Description: Invoke a function during stack creation.      
  CloudGuardOnboardingOrchestratorInvoke:
    Type: AWS::CloudFormation::CustomResource
    Version: "1.0"
    Properties:
      ServiceToken: !GetAtt CloudGuardOnboardingOrchestrator.Arn
      PostureTemplateS3Url: !Ref PostureTemplateS3Url
      PostureStackName: !Ref PostureStackName
      CloudGuardAwsAccountId: !Ref CloudGuardAwsAccountId
      RoleExternalTrustSecret: !Ref RoleExternalTrustSecret
      OnboardingId: !Ref OnboardingId
      ApiBaseUrl: !Ref ApiBaseUrl
      CloudGuardApiKeyId: !Ref CloudGuardApiKeyId
      CloudGuardApiKeySecret: !Ref CloudGuardApiKeySecret
      ServerlessProtectionEnabled: !Ref ServerlessProtectionEnabled
      AwsAccountId: !Sub '${AWS::AccountId}'
      ServerlessTemplateS3Url: !Ref ServerlessTemplateS3Url
      ServerlessStackName: !Ref ServerlessStackName